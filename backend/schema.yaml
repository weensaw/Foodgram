openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /ingredients/:
    get:
      operationId: listIngredients
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - ingredients
  /ingredients/{id}/:
    get:
      operationId: retrieveIngredient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0418\u043D\u0433\u0440\
          \u0435\u0434\u0438\u0435\u043D\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - ingredients
  /recipes/:
    get:
      operationId: listRecipes
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: is_favorited
        required: false
        in: query
        description: is_favorited
        schema:
          type: string
      - name: is_in_shopping_cart
        required: false
        in: query
        description: is_in_shopping_cart
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - recipes
    post:
      operationId: createRecipe
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRecipe'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
  /recipes/download_shopping_cart/:
    get:
      operationId: downloadShoppingCartRecipe
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
  /recipes/{id}/:
    get:
      operationId: retrieveRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: is_favorited
        required: false
        in: query
        description: is_favorited
        schema:
          type: string
      - name: is_in_shopping_cart
        required: false
        in: query
        description: is_in_shopping_cart
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - recipes
    put:
      operationId: updateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: is_favorited
        required: false
        in: query
        description: is_favorited
        schema:
          type: string
      - name: is_in_shopping_cart
        required: false
        in: query
        description: is_in_shopping_cart
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRecipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
    patch:
      operationId: partialUpdateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: is_favorited
        required: false
        in: query
        description: is_favorited
        schema:
          type: string
      - name: is_in_shopping_cart
        required: false
        in: query
        description: is_in_shopping_cart
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRecipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
    delete:
      operationId: destroyRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      - name: tags
        required: false
        in: query
        description: tags
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: is_favorited
        required: false
        in: query
        description: is_favorited
        schema:
          type: string
      - name: is_in_shopping_cart
        required: false
        in: query
        description: is_in_shopping_cart
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - recipes
  /api/auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /tags/tags/:
    get:
      operationId: listTags
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - tags
  /tags/tags/{id}/:
    get:
      operationId: retrieveTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0422\u0435\u0433."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - tags
  /recipes/{id}/favorite/:
    post:
      operationId: favoriteRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRecipe'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
    delete:
      operationId: favoriteRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - recipes
  /recipes/{id}/shopping_cart/:
    post:
      operationId: shoppingCartRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRecipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRecipe'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRecipe'
          description: ''
      tags:
      - recipes
    delete:
      operationId: shoppingCartRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - recipes
  /api/auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/reset_email/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/auth/users/set_email/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u0430\u0437\
            \u0432\u0430\u043D\u0438\u0435 \u0438\u043D\u0433\u0440\u0435\u0434\u0438\
            \u0435\u043D\u0442\u0430"
          maxLength: 255
        measurement_unit:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0434\u0438\
            \u043D\u0438\u0446\u0443 \u0438\u0437\u043C\u0435\u0440\u0435\u043D\u0438\
            \u044F"
          maxLength: 50
      required:
      - name
      - measurement_unit
    Recipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            type: string
        name:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u0430\u0437\
            \u0432\u0430\u043D\u0438\u0435 \u0440\u0435\u0446\u0435\u043F\u0442\u0430"
          maxLength: 200
        author:
          type: object
          properties:
            email:
              type: string
              format: email
              description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\
                \u0440\u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\
                \u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B"
              maxLength: 254
            id:
              type: integer
              readOnly: true
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+\z
              maxLength: 150
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
            is_subscribed:
              type: string
              readOnly: true
          required:
          - email
          - username
        ingredients:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                readOnly: true
              name:
                type: string
                readOnly: true
              measurement_unit:
                type: string
                readOnly: true
              amount:
                type: integer
            required:
            - amount
          readOnly: true
        image:
          type: string
          format: binary
        text:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043E\u043F\u0438\
            \u0441\u0430\u043D\u0438\u0435 \u0440\u0435\u0446\u0435\u043F\u0442\u0430"
        cooking_time:
          type: integer
          minimum: 1
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0440\u0435\
            \u043C\u044F \u043F\u0440\u0438\u0433\u043E\u0442\u043E\u0432\u043B\u0435\
            \u043D\u0438\u044F"
        is_favorited:
          type: string
          readOnly: true
        is_in_shopping_cart:
          type: string
          readOnly: true
      required:
      - tags
      - name
      - author
      - image
      - text
      - cooking_time
    AddRecipe:
      type: object
      properties:
        tags:
          type: array
          items:
            type: integer
        name:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u0430\u0437\
            \u0432\u0430\u043D\u0438\u0435 \u0440\u0435\u0446\u0435\u043F\u0442\u0430"
          maxLength: 200
        ingredients:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              amount:
                type: integer
            required:
            - id
            - amount
        image:
          type: string
          format: binary
        text:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043E\u043F\u0438\
            \u0441\u0430\u043D\u0438\u0435 \u0440\u0435\u0446\u0435\u043F\u0442\u0430"
        cooking_time:
          type: integer
          minimum: 1
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0440\u0435\
            \u043C\u044F \u043F\u0440\u0438\u0433\u043E\u0442\u043E\u0432\u043B\u0435\
            \u043D\u0438\u044F"
      required:
      - tags
      - name
      - ingredients
      - image
      - text
      - cooking_time
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
      required:
      - username
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u0430\u0437\
            \u0432\u0430\u043D\u0438\u0435 \u0442\u0435\u0433\u0430"
          maxLength: 255
        color:
          type: string
          description: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0446\u0432\
            \u0435\u0442 \u0442\u0435\u0433\u0430"
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 8
        slug:
          type: string
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043B\u0430\
            \u0433"
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - slug
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
